/* --- 基本設定 --- */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  background-color: #f9faff;
  margin: 0;
  overflow: hidden; // スクロールを禁止
}
.container {
  width: calc(100vw);
  min-width: 1024px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* --- フォントサイズとノードサイズの動的調整 (Sizing Variables) --- */
:root {
  --base-font-size: clamp(1rem, 1.5vmin, 2rem);
  --center-node-size: clamp(130px, 22vmin, 200px);
  --category-padding: clamp(0.6rem, 1.6vmin, 0.9rem) clamp(1.1rem, 3.2vmin, 1.6rem);
  --tool-padding: clamp(0.5rem, 1.4vmin, 0.8rem) clamp(1rem, 2.6vmin, 1.4rem);
  --delete-button-size: clamp(20px, 3.2vmin, 24px);
}

/* --- マインドマップコンテナ --- */
.mindmap-container {
  position: relative;
  width: 100%;
  height: calc(100vh - 240px);
  min-height: 500px;
  padding: 2rem;
}

/* --- レイアウト計算（左右振り分け） --- */
.branch {
  // --- 変数定義 ---
  --horizontal-offset: clamp(32%, 40vmin, 45%);
  --vertical-spread: clamp(10%, 15vmin, 20%);

  // --side-total と --side-index はReactから受け取る
  // 各サイドのy座標を計算 (-1から1の範囲に正規化)
  --normalized-y: calc(var(--side-index) / (var(--side-total) - 1 + 0.0001) * 2 - 1);

  // --side-totalが1の場合はy座標を中央(0)にする
  --y-pos: calc(var(--vertical-spread) * clamp(0, var(--side-total) - 1, 1) * var(--normalized-y));

  // --- スタイル適用 ---
  top: calc(50% + var(--y-pos));
  transform: translate(0%, -50%);

  display: flex;
  align-items: center;
  gap: clamp(1rem, 2vmin, 1.5rem);
}

/* --- 各ノードのスタイル --- */
.center-node-wrapper {
  transform: translate(0%, -50%);
  z-index: 10;
}

.center-node {
  width: var(--center-node-size);
  height: var(--center-node-size);
  border-radius: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 1.5rem; // 内側の余白を少し広げる
  box-sizing: border-box;

  // ★★★ ここからが変更箇所 ★★★
  position: relative; // ::before疑似要素の基準
  background: linear-gradient(145deg, #8a71ff, #6a50e0); // 紫系のグラデーション
  color: white; // テキスト色を白に
  border: none; // 以前の透明ボーダーは不要
  box-shadow: 0 10px 30px rgba(123, 97, 255, 0.4);
  cursor: pointer;
  transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94),
              box-shadow 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);

  // 内側にアクセントとなるリングを追加 (疑似要素を使用)
  &::before {
    content: '';
    position: absolute;
    top: 8px;
    left: 8px;
    right: 8px;
    bottom: 8px;
    border-radius: 50%;
    border: 2px dashed rgba(255, 255, 255, 0.3);
    transition: transform 0.3s ease-in-out;
  }

  &:hover {
    transform: translateY(-5px) scale(1.05);
    box-shadow: 0 15px 40px rgba(123, 97, 255, 0.5);
    // ホバー時にリングを少し回転させる
    &::before {
      transform: rotate(30deg);
    }
  }

  h1 { font-size: calc(var(--base-font-size) * 1.3); margin: 0; }
  p { font-size: calc(var(--base-font-size) * 1); margin: 0.5rem 0 0; color: #888; }
}

.category-node {
  padding: var(--category-padding) !important;
  border-radius: 30px;
  font-weight: bold;
  font-size: var(--base-font-size);
  white-space: nowrap;
  position: relative;
  z-index: 5;
  cursor: pointer;
  transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94),
              box-shadow 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);

  @mixin set-category-color($bgColor, $shadowColor) {
    background-color: $bgColor;
    color: white;
    box-shadow: 0 4px 15px rgba($shadowColor, 0.4);

    &:hover {
      transform: translateY(-4px);
      box-shadow: 0 10px 25px rgba($shadowColor, 0.5);
    }
  }

  @include set-category-color(#7b61ff, #7b61ff);
}

.tool-nodes {
  display: flex;
  flex-direction: column;
  gap: calc(var(--base-font-size) * 0.8);
}

.tool-node {
  background-color: #fff;
  color: #333;
  padding: var(--tool-padding);
  border-radius: 20px;
  border: 1px solid #ddd;
  text-decoration: none;
  font-size: calc(var(--base-font-size) * 0.95);
  white-space: nowrap;
  border: 1px solid #e0e5ec;
  box-shadow: 0 2px 5px rgba(180, 190, 210, 0.1);
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);

  &:hover {
    transform: translateY(-3px); // 浮き上がる
    color: #7b61ff; // テキスト色を変更
    border-color: #c8c2ff; // ボーダー色を変更
    background-color: #f8f7ff; // 背景色をほんのりつける
    box-shadow: 0 6px 15px rgba(180, 190, 210, 0.2);
  }
}

/* --- ボタン類のスタイル --- */
.tool-node-wrapper {
  position: relative;
  display: flex;

  .delete-button {
    position: absolute;
    top: calc(var(--delete-button-size) * -0.4);
    right: calc(var(--delete-button-size) * -0.4);
    width: var(--delete-button-size);
    height: var(--delete-button-size);
    background-color: #e74c3c;
    color: white;
    border: none;
    border-radius: 50%;
    font-size: calc(var(--delete-button-size) * 0.7);
    line-height: var(--delete-button-size);
    text-align: center;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.2s, transform 0.2s;
    transform: scale(0.8);
    z-index: 5;
  }

  &:hover .delete-button {
    opacity: 1;
    transform: scale(1);
  }
}

.add-tool-button {
  background: none;
  border: 1px dashed #ccc;
  color: #888;
  padding: var(--tool-padding);
  border-radius: 20px;
  font-size: calc(var(--base-font-size) * 0.95);
  cursor: pointer;
  transition: all 0.2s;
  margin-top: calc(var(--base-font-size) * 0.5);
  white-space: nowrap;

  &:hover {
    background-color: #f0f8ff;
    color: #7b61ff;
    border-color: #7b61ff;
  }
}

/* --- その他 --- */
.loading {
  font-size: 1.5rem;
  color: #555;
  text-align: center;
  padding: 5rem;
}

/* ======================================== */
/*  Accessibility Button Reset             */
/* ======================================== */
.center-node,
.category-node {
  // button要素のデフォルトスタイルをリセット
  appearance: none;
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font-family: inherit; // 親要素のフォントを継承
  color: inherit;       // 親要素の色を継承
  text-align: inherit;  // 親要素のテキスト揃えを継承

  // :focus-visible はキーボード操作（Tabキーなど）でフォーカスした時にだけアウトラインを表示する
  // これにより、マウスユーザーには邪魔にならず、キーボードユーザーのアクセシビリティを確保する
  &:focus-visible {
    outline: 3px solid #7b61ff;
    outline-offset: 2px;
  }
}

/* ======================================== */
/*  Mindmap Grid Layout                    */
/* ======================================== */

.mindmap-grid-container {
  width: 100%;
  height: calc(100vh - 120px);
  min-height: 500px;

  display: grid;
  // [左カラム] [中央] [右カラム] の3カラム構成
  grid-template-columns: 1fr auto 1fr;
  align-items: center; // アイテムを垂直方向の中央に配置
  gap: clamp(3rem, 9vw, 6rem); // カラム間の余白
}

.branch-column {
  display: flex;
  flex-direction: column;
  justify-content: space-around; // アイテムを均等に配置
  align-items: stretch; // アイテムの高さを揃える
  height: 100%; // 親の高さ全体に広がる
  gap: 1.5rem; // カテゴリ間の最小余白
}

.column-left {
  // 左カラム内のアイテムを右揃えにする
  align-items: flex-end;
}
.column-right {
  // 右カラム内のアイテムを左揃えにする
  align-items: flex-start;
}

// .branch は position: absolute ではなくなり、ただのコンテナになる
.branch {
  display: flex;
  align-items: center;
  gap: clamp(1rem, 2vmin, 1.5rem);
}

// 左カラム内のブランチは左右を反転させる
.column-left .branch {
  flex-direction: row-reverse;

  .tool-nodes { align-items: flex-end; }
  .tool-node-wrapper .delete-button {
    right: auto;
    left: calc(var(--delete-button-size) * -0.4);
  }
}

.full-page-loader {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
  font-size: var(--base-font-size);
  color: #888;
  background-color: #f9faff;
}

.add-icon {
  font-size: 36px !important;
  font-weight: bold;
}